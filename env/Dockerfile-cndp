# SPDX-License-Identifier: BSD-3-Clause
# Copyright (c) 2020-present Intel Corporation
#
# vim: syntax=dockerfile

# Build command from bess root directory to build besscndp docker image
# docker build --build-arg http_proxy=$http_proxy \
# --build-arg https_proxy=$http_proxy --build-arg no_proxy="$no_proxy" \
# -t besscndp -f env/Dockerfile-cndp .

FROM ubuntu:20.04 AS cndp-build

# Install CNDP dependencies and build CNDP.
ENV DEBIAN_FRONTEND=noninteractive
RUN apt-get update && apt-get install -y \
    --no-install-recommends \
    ca-certificates \
    build-essential \
    golang \
    libelf-dev \
    meson \
    pkg-config \
    libbsd-dev \
    libjson-c-dev \
    libnl-3-dev \
    libnl-cli-3-dev \
    libnuma-dev \
    libpcap-dev \
    wget \
    llvm-dev \
    libclang-dev \
    clang \
    curl \
    git \
    gcc-multilib \
    llvm \
    lld \
    m4 \
    linux-tools-common \
    libbpf-dev && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Install libxdp
WORKDIR /xdp-tools
RUN git clone https://github.com/xdp-project/xdp-tools.git . && \
    git checkout v1.2.2 && \
    ./configure && \
    make -j; PREFIX=/usr make -j install
ENV PKG_CONFIG_PATH=/usr/lib/pkgconfig

# Get CNDP from GitHub
WORKDIR /
RUN git clone https://github.com/CloudNativeDataPlane/cndp.git
WORKDIR /cndp
# Use version of CNDP tested with BESS
RUN git checkout 19d74af9b37c4150a3a054a394f7f13eb95ed0b8
# Build and install CNDP shared libraries
RUN make && make install
# Build and install CNDP static libraries
RUN make static_build=1 rebuild install

# Build the prometheus-metrics app
WORKDIR /cndp/lang/go/stats/prometheus
RUN go build prometheus.go

FROM ubuntu:20.04

# Install CNDP dependencies
ENV DEBIAN_FRONTEND=noninteractive
RUN apt-get update && apt-get install -y \
    --no-install-recommends \
    build-essential \
    ethtool \
    libbsd-dev \
    libbpf-dev \
    libelf1 \
    libjson-c-dev \
    libnl-3-dev \
    libnl-cli-3-dev \
    libnuma1 \
    libpcap0.8 \
    pkg-config && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Copy required CNDP libraries, header files, pkg-config and binaries.
COPY --from=cndp-build /cndp/usr/local/bin/cndpfwd /usr/bin/
COPY --from=cndp-build /cndp/usr/local/lib/x86_64-linux-gnu/*.so /usr/lib/
COPY --from=cndp-build /cndp/usr/local/lib/x86_64-linux-gnu/*.a /usr/lib/
COPY --from=cndp-build /cndp/usr/local/include/cndp/ /usr/local/include/cndp/
COPY --from=cndp-build /cndp/usr/local/lib/pkgconfig/libcndp.pc /usr/lib/pkgconfig/
COPY --from=cndp-build /cndp/lang/go/stats/prometheus/prometheus /usr/bin/
COPY --from=cndp-build /usr/lib/libxdp* /usr/lib/
COPY --from=cndp-build /usr/include/xdp/ /usr/include/xdp/

# Set CNDP PKG_CONFIG_PATH
ENV PKG_CONFIG_PATH=/usr/lib64/pkgconfig:/usr/lib/x86_64-linux-gnu/pkgconfig:/usr/lib/pkgconfig

COPY env/build-dep.yml /tmp/
COPY env/kmod.yml /tmp/
COPY env/ci.yml /tmp/

# Install dependency packages with Ansible
RUN apt-get update && \
    apt-get install -y \
    --no-install-recommends \
    ansible \
    curl \
    git \
    sudo \
    libgraph-easy-perl \
    python-is-python3 && \
    ansible-playbook /tmp/ci.yml -i "localhost," -c local && \
    apt-get purge -y ansible && \
    apt-get autoremove -y && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

RUN python3 -m pip install --no-cache-dir --upgrade pip && \
    python3 -m pip install --no-cache-dir \
    grpcio \
    scapy \
    protobuf==3.20.0 \
    flask \
    pyroute2

RUN mkdir -p /build/bess/log

# Copy required files and build bess
WORKDIR /build/bess
COPY bessctl bessctl
COPY bin bin
COPY core core
COPY deps/*.patch deps/
COPY env env
COPY protobuf protobuf
COPY pybess pybess
COPY sample_plugin sample_plugin
COPY build.py container_build.py install_git_hooks.sh ./
RUN ./build.py bess && \
    cp /build/bess/deps/dpdk-22.11.4/build/app/dpdk-testpmd /usr/local/bin/

ENV CCACHE_DIR=/tmp/ccache
ENV CCACHE_COMPRESS=true
